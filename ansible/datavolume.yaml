#!/usr/bin/env ansible-playbook
---
- hosts: localhost
  vars_files: "vars/default.yaml"
  roles:
  - oc_local

  tasks:

  # NOTE: we copy this to the Ironic images directory to reuse it for
  # the provision server (openstackbaremetalsets). This avoids downloading
  # the same image twice.
  - name: Check if {{ osp_controller_base_image_url | basename }} already exist
    become: true
    become_user: ocp
    stat:
      path: "{{ base_path }}/ironic/html/images/{{ osp_controller_base_image_url | basename }}"
    register: stat_result

  - name: Get RHEL guest base image
    become: true
    become_user: ocp
    when: not stat_result.stat.exists
    get_url:
      url: "{{ osp_controller_base_image_url }}"
      dest: "{{ base_path }}/ironic/html/images/{{ osp_controller_base_image_url | basename }}"
      mode: '0644'

  - name: does the datavolume already exist
    ignore_errors: true
    shell: >
      oc get datavolume openstack-base-img -n {{ namespace }}
    environment: &oc_env
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    register: datavolume_switch

  - name: Deploy the datavolume
    shell: |
      virtctl image-upload dv openstack-base-img -n {{ namespace }} --size={{ osp_controller_disk_size }}G --image-path={{ base_path }}/ironic/html/images/{{ osp_controller_base_image_url | basename }}
    environment:
      <<: *oc_env
    when: datavolume_switch.rc == 1

  - name: Wait for the datavolume to be ready
    shell: |
      oc wait datavolume openstack-base-img --for condition=Ready -n "{{ namespace }}" --timeout={{ default_timeout }}s
    environment:
      <<: *oc_env
