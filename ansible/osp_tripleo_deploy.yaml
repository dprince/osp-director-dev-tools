---
- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - name: Set directory for the tripleo deployment files
    set_fact:
      ooo_yaml_dir: "{{ working_yamls_dir }}/tripleo_deploy"
      ooo_net_config_dir: "{{ working_yamls_dir }}/net_config"

  - name: Create yaml dir
    file:
      path: "{{ item }}"
      state: directory
      mode: '0755'
    with_items:
    - "{{ ooo_yaml_dir }}"
    - "{{ ooo_net_config_dir }}"

  - name: render templates to yaml dir
    template:
      src: "osp/tripleo_deploy/{{ item }}.j2"
      dest: "{{ ooo_yaml_dir }}/{{ item }}"
      mode: '0644'
    with_items:
    - custom.yaml
    - storage-backend.yaml
    - containers-prepare-parameter.yaml
    - tripleo-overcloud-passwords.yaml

  - name: render {{ osp_network_type }} network parameter file
    template:
      src: "osp/tripleo_deploy/{{ osp_network_type }}/{{ item }}.j2"
      dest: "{{ ooo_yaml_dir }}/{{ item }}"
      mode: '0644'
    with_items:
    - network-environment.yaml

  - name: create tripleo-deploy-config-custom ConfigMap
    shell: |
      oc create configmap -n openstack tripleo-deploy-config-custom --from-file={{ ooo_yaml_dir }}/ --dry-run -o yaml | oc apply -f -
    environment: &oc_env
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"

  - name: copy net-config files to ooo_net_config_dir
    copy:
      src: "{{ item }}"
      dest: "{{ ooo_net_config_dir }}/"
      mode: '0644'
    with_fileglob:
    - "osp/net_config/{{ osp_network_type }}/*.yaml"

  - name: create tripleo-net-config ConfigMap with tarballs
    shell: |
      cd {{ ooo_net_config_dir }}
      tar -cvzf net-config.tar.gz *.yaml
      oc create configmap -n openstack tripleo-net-config --from-file=net-config.tar.gz
      rm net-config.tar.gz
    environment:
      <<: *oc_env

  - name: Create glance NFS share
    become: true
    become_user: root
    file:
      path: "/home/nfs/{{ item }}"
      state: directory
      mode: '0777'
      group: nobody
      owner: nobody
    with_items:
      - glance
      - glance-staging

  - name: Configure glance export
    become: true
    become_user: root
    lineinfile:
      path: /etc/exports.d/glance.exports
      line: "/home/nfs/{{ item }} *(rw,sync,no_root_squash)"
      create: yes
      mode: '0644'
    with_items:
      - glance
      - glance-staging

  - name: Export NFS share to the server
    become: true
    become_user: root
    command: "exportfs -r"
